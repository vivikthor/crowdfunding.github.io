@charset 'UTF-8';

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//
//    Puxl
//
//    Version:     1-beta
//
//    Author:      IÃ±igo Garcia (@MrKanuel)
//
//    Route:       puxl-framework/css/puxl/compound/_bar.scss
//
//    Requires:    puxl-framework/css/puxl/theme/_puxl-light.scss
//                 puxl-framework/css/puxl/_structure.scss
//                 puxl-framework/css/puxl/mixin/_error-warning.scss
//
//    License:     The MIT License (MIT)
//                 https://github.com/puxl/puxl-framework/blob/master/LICENSE
//
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -


  // Body  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  body {
    .js &.app-bar--top {
      padding-top:    var(--app-bar--height);

      &--double {
        padding-top:    calc(2 * var(--app-bar--height));
      }
    }

    .js &.app-bar--bottom {
      padding-bottom:    var(--app-bar--height);

      &--double {
        padding-bottom:    calc(2 * var(--app-bar--height));
      }
    }
  }// body


  // Bar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  .bar {
    align-items:         center;
    background-color:    $bar--background-color;
    color:               $bar--color;
    display:             flex;
    min-height:          var(--app-bar--height);
    padding:             $bar--padding-x
                         $bar--padding-y;

    &.double {
      min-height:    calc(2 * var(--app-bar--height));
    }

    ul {
      display:           inline-flex;
      flex-direction:    row;
      list-style:        none;
      margin:            0;
      padding:           0;

      li {
        padding:       $bar__item--margin;
        text-align:    center;
      }
    }// ul

    @each $key, $value in $breakpoints {
      .#{$key}--down {
        @media (min-width: $value) {
          display:    none;
        }
      }

      .#{$key}--up {
        @media (max-width: $value - 1) {
          display:    none;
        }
      }
    }// @each $key, $value in $breakpoints

    .mobile--down {
      @media (min-width: $mobile-threshold) {
        display:    none;
      }
    }// .mobile--down

    .mobile--up {
      @media (max-width: $mobile-threshold - 1) {
        display:    none;
      }
    }// .mobile--up

    .space {
      &--before {
        [dir=ltr] & {
          margin-left:    auto;
        }

        [dir=rtl] & {
          margin-right:    auto;
        }
      }

      &--after {
        [dir=ltr] & {
          margin-right:    auto;
        }

        [dir=rtl] & {
          margin-left:    auto;
        }
      }
    }// .space

    [class*=bar-btn] {
      border-radius:    $bar-btn--border-radius;
      font-size:        inherit;
      height:           var(--app-bar--height);
      min-width:        var(--app-bar--height);
      padding:          $bar-btn--padding;
    }// [class*=bar-btn]

    .bar-btn-icn {
      > img,
      > svg {
        height:    $bar-btn-icn__icon--size;
        width:     $bar-btn-icn__icon--size;
      }
    }// .bar-btn-icn

    a.bar-btn-icn {
      line-height:    2.875em;
    }// a.bar-btn-icn

    .bar-btn-icn-txt {
      &.v {
        > img,
        > svg {
          height:    $bar-btn-icn-txt--v__icon--size;
          width:     $bar-btn-icn-txt--v__icon--size;
        }

        > span {
          font-size:    $bar-btn-icn-txt--v__text--size;
        }
      }

      > img,
      > svg {
        height:    $bar-btn-icn-txt__icon--size;
        width:     $bar-btn-icn-txt__icon--size;
      }
    }// .bar-btn-icn-txt

    a.bar-btn-icn-txt {
      line-height:    2.5em;

      &.v {
        line-height:    1em;
      }
    }// a.bar-btn-icn-txt

  }// .bar


  // App bar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  .app.bar {
    &:not([id]) {
      @include error-warning('This <header class="app bar"> tag must have a non-empty id="" attribute. Example: <header class="app bar" id="[ some ID ]">.');
    }

    background-color:    $app-bar--background-color;
    color:               $app-bar--color;
    font-size:           $app-bar--font-size;
    max-height:          $app-bar--max-height;
    padding:             $app-bar--padding-x
                         $app-bar--padding-y;
    width:               100%;
    z-index:             map-get($z-elevations, app-bar);

    .js & {
      left:        0;
      position:    fixed;
    }

    @media (max-width: $mobile-threshold - 1) {
      align-items:       stretch;
      flex-direction:    column;
    }

    @media (min-width: $mobile-threshold) {
      flex-direction:    row;
    }

    &.top {
      @include z-shadow(map-get($z-elevations, app-bar), south);

      .js & {
        top:    var(--app-bar--top);
      }
    }// header.app.bar.top

    &.bottom {
      @include z-shadow(map-get($z-elevations, app-bar), north);

      .js & {
        bottom:    var(--app-bar--bottom);
      }
    }// header.app.bar.bottom

    > header {
      align-items:    center;
      display:        flex;
      min-height:     var(--app-bar--height);
    }// > header

      .home {
        align-items:         center;
        background-color:    $bar__home-link--background-color;
        color:               $bar__home-link--color;
        display:             inline-flex;
        font-size:           $bar__home-link--font-size;
        height:              var(--app-bar--height);
        padding:             $bar__home-link--padding;
        text-decoration:     none;

        img,
        svg {
          height:    $bar__home-link__icon--size;
          width:     $bar__home-link__icon--size;
        }

        svg {
          color:    currentColor;
        }

        span {
          [dir=ltr] & {
            margin-left:    $bar__home-link__span--margin;
          }

          [dir=rtl] & {
            margin-right:    $bar__home-link__span--margin;
          }
        }
      }// .home

      button.toggler {
        &:not([id]) {
          @include error-warning('This <button class="toggler"> tag must have a non-empty id="" attribute. Example: <button class="toggler" id="[ some ID ]">.');
        }

        &:not([aria-controls]) {
          @include error-warning('This <button class="toggler"> tag must have a not empty aria-controls="" attribute with the ID attribute of the element it toggles. Example: <button class="toggler" aria-controls="[ The toggled element ID ]">.');
        }

        &:not([aria-haspopup=true]) {
          @include error-warning('This <button class="toggler"> tag must have a aria-haspopup="true" attribute. Example: <button class="toggler" aria-haspopup="true">.');
        }

        &:not([aria-expanded=true]):not([aria-expanded=false]) {
          @include error-warning('This <button class="toggler"> tag must have a true OR false aria-expanded="" attribute. Example: <button class="toggler" aria-expanded="[ true OR false ]">.');
        }

        &[type=reset],
        &[type=submit],
        &:not([type=button]) {
          @include error-warning('This <button class="toggler"> tag must have a type="button" attribute. Example: <button class="toggler" type="button">.');
        }
      }// button.toggler

    > nav {
      &:not([role=navigation]) {
        @include error-warning('This <nav> tag must have a role="navigation" attribute. Example: <nav role="navigation">.');
      }

      max-height:    calc(#{$app-bar--max-height} - var(--app-bar--height));
      overflow:      auto;

      @media (min-width: $mobile-threshold) {
        flex-grow:    1;
      }

      .space {
        &--before,
        &--after {
          @media (max-width: $mobile-threshold - 1) {
            margin-left:     0;
            margin-right:    0;
          }
        }
      }
    }// > nav

      .subheading {
        &:not([id]) {
          @include error-warning('This <div class="subheading"> tag must have a non-empty id="" attribute. Example: <div class="subheading" id="[ some ID ]">.');
        }

        &:not([aria-hidden=true]):not([aria-hidden=false]) {
          @include error-warning('This <div class="subheading"> tag must have a true OR false aria-hidden="" attribute. Example: <div class="subheading" aria-hidden="[ true OR false ]">.');
        }

        &[aria-hidden=false] {
          display:    flex;
        }

        &[aria-hidden=true] {
          display:    none;
        }

        display:       flex;
        min-height:    var(--app-bar--height);

        @media (max-width: $mobile-threshold - 1) {
          align-items:       stretch;
          flex-direction:    column;
        }

        @media (min-width: $mobile-threshold) {
          align-items:       center;
          flex-direction:    row;
        }

        ul {
          @media (max-width: $mobile-threshold - 1) {
            flex-direction:    column;
          }

          @media (min-width: $mobile-threshold) {
            flex-direction:    row;
          }
        }// ul

        .space {
          &--before {
            //
          }

          &--after {
            //
          }
        }// .space
      }// .subheading
  }// .app.bar
