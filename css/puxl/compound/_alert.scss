@charset 'UTF-8';

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//
//    Puxl
//
//    Version:     1-beta
//
//    Author:      IÃ±igo Garcia (@MrKanuel)
//
//    Route:       puxl-framework/css/puxl/compound/_alert.scss
//
//    Requires:    puxl-framework/css/puxl/function/_color.scss
//                 puxl-framework/css/puxl/function/_draw-svg.scss
//                 puxl-framework/css/puxl/theme/_puxl-light.scss
//                 puxl-framework/css/puxl/mixin/_error-warning.scss
//
//    License:     The MIT License (MIT)
//                 https://github.com/puxl/puxl-framework/blob/master/LICENSE
//
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -


  [class^=alert] {

    $colors: primary, secondary, success, info, warning, danger;

    background-color:    $alert--background-color;
    border-radius:       $alert--border-radius;
    border-style:        $alert--border-style;
    padding:             $alert--padding;

    [dir=ltr] & {
      border-width:      $alert--border-width
                         $alert--border-width
                         $alert--border-width
                         ($alert--border-width * 4);
    }

    [dir=rtl] & {
      border-width:      $alert--border-width
                         ($alert--border-width * 4)
                         $alert--border-width
                         $alert--border-width;
    }

    @each $color in $colors {
      &.#{$color} {
        border-color:    colors-shade-contrast-dark-light(get-color($color), $main--background-color);

        h4 {
          color:         colors-shade-contrast-dark-light(get-color($color), $main--background-color);
        }
      }
    }

    &.success,
    &.info,
    &.warning,
    &.danger {
      background-repeat:        no-repeat;
      background-size:          $alert__icon--size;

      [dir=ltr] & {
        background-position:    $alert--padding
                                $alert--padding;
        padding-left:           (2 * $alert--padding) + $alert__icon--size;
      }

      [dir=rtl] & {
        background-position:    calc(100% - ($alert__icon--size / 2))
                                $alert--padding;
        padding-right:          (2 * $alert--padding) + $alert__icon--size;
      }
    }
    &.success {
      background-image:         url(draw-svg(ok, colors-shade-contrast-dark-light(get-color(success), $main--background-color)));
    }
    &.info {
      background-image:         url(draw-svg(alert-information, colors-shade-contrast-dark-light(get-color(info), $main--background-color)));
    }
    &.warning {
      background-image:         url(draw-svg(alert-warning, colors-shade-contrast-dark-light(get-color(warning), $main--background-color)));
    }
    &.danger {
      background-image:         url(draw-svg(alert-error, colors-shade-contrast-dark-light(get-color(danger), $main--background-color)));
    }

    h4 {
      &:not([id]) {
        @include error-warning('This <h4> tag must have an id="" attribute. Example: <h4 id="[ some ID ]">. Remember, the tag with role="alert" (or role="alertdialog") that is parent of this <h4> tag must have an aria-labelledby="" attribute value that matches the id="" of this <h4> tag. Example: <tag role="alert (or  alertdialog)" aria-labelledby="[ this <h4> tag ID ]">.');
      }

      font-size:      1.5rem;
      font-weight:    normal;
      line-height:    1em;
      margin:         $alert__heading--margin;
    }

    p,
    ol,
    ul {
      margin-bottom:    $alert--padding;

      &:last-child {
        margin-bottom:    0;
      }
    }

    p {
      max-width:    100%;
      width:        100%;
    }
  }// [class^=alert]

  .alert {
    &:not([role=alert]) {
      @include error-warning('This <tag> with class="alert" must have a role="alert" attribute. Example: <tag class="alert" role="alert">.');
    }
  }// .alert

  .alertdialog {
    &:not([role=alertdialog]) {
      @include error-warning('This <tag> with class="alertdialog" must have a role="alertdialog" attribute. Example: <tag class="alertdialog" role="alertdialog">.');
    }

    &:not([aria-labelledby]) {
      @include error-warning('This tag with role="alertdialog" must have an aria-labelledby="" attribute. The value of the aria-labelledby="" attribute must be the id="" value of the <h4> in <header>. Example: <tag role="alertdialog" aria-labelledby="[ <h4> tag ID ]">.');
    }

    &:not([aria-describedby]) {
      @include error-warning('This tag with role="alertdialog" must have an aria-describedby="" attribute. The value of the aria-describedby="" attribute must be the id="" value of the <div> that follows <header>: <tag aria-describedby="[ <div> tag ID ]">.');
    }

    @include z-shadow(map-get($z-elevations, modal));

    z-index:    map-get($z-elevations, modal);

    header + div {
      &:not([id]) {
        @include error-warning('This <div> tag must have an id="" attribute. Example: <div id="[ some ID ]">. Remember, the role="alertdialog" that is parent of this <div> tag must have an aria-describedby="" attribute value that matches the id="" of this <div> tag. Example: <tag role="alertdialog" aria-describedby="[ this <div> tag ID ]">.');
      }

      &:not([tabindex]) {
        @include error-warning('Make this content focusable using tabindex="0". Example: <div tabindex="0">.');
      }

      &:not([role=document]) {
        @include error-warning('This <div> tag must have a role="document" attribute. Example: <div role="document">.');
      }
    }

    footer {
      align-items:        center;
      border-top:         $alert__footer--border;
      display:            flex;
      justify-content:    flex-end;
      margin-top:         $alert--padding;
      padding-top:        $alert--padding;

      > * {
        [dir=ltr] & {
          margin-right:    $alert__footer__item--separation;

          &:last-child {
            margin-right: 0;
          }
        }

        [dir=rtl] & {
          margin-left:    $alert__footer__item--separation;

          &:last-child {
            margin-left: 0;
          }
        }
      }

      .space {
        &--before {
          [dir=ltr] & {
            margin-left:    auto;
          }

          [dir=rtl] & {
            margin-right:    auto;
          }
        }

        &--after {
          [dir=ltr] & {
            margin-right:    auto;
          }

          [dir=rtl] & {
            margin-left:    auto;
          }
        }
      }// .space
    }
  }// .alertdialog
