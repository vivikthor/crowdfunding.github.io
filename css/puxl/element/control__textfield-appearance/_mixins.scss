@charset 'UTF-8';

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//
//    Puxl
//
//    Version:     1-beta
//
//    Author:      IÃ±igo Garcia (@MrKanuel)
//
//    Route:       puxl-framework/css/puxl/element/control__textfield-appearance/_mixins.scss
//
//    Requires:    puxl-framework/css/puxl/function/_color.scss
//                 puxl-framework/css/puxl/theme/_puxl-light.scss
//                 puxl-framework/css/puxl/_structure.scss
//
//    License:     The MIT License (MIT)
//                 https://github.com/puxl/puxl-framework/blob/master/LICENSE
//
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -


  //  Look ghost - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  @mixin textfield--ghost--rest($variant) {
    --txt--bg-c:    transparent;
    --txt--bd-c:    transparent
                    transparent
                    var(--color--#{$variant});
    --txt--sh:      $txt--box-shadow--none;
    --txt--c:       colors-shade-contrast-dark-light(get-color($variant), $main--background-color);
  }

  @mixin textfield--ghost--hover($variant) {
    --txt--bd-c:    get-color($variant, darker);
  }

  @mixin textfield--ghost--focus($variant) {
    --txt--bd-c:    get-color($variant, darker);
  }

  @mixin textfield--ghost--disabled($variant) {
    --txt--bg-c:    transparentize(get-color($variant, lightest), $opacity--disabled);
    --txt--bd-c:    transparentize(get-color($variant, lightest), $opacity--disabled);
    --txt--c:       var(--color--#{$variant});
  }

  @mixin textfield--ghost--readonly($variant) {
    --txt--bg-c:    transparentize(get-color($variant, lightest), $opacity--disabled);
    --txt--bd-c:    var(--color--#{$variant});
    --txt--c:       colors-shade-contrast-dark-light(get-color($variant), $main--background-color);
  }


  //  Look solid - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  @mixin textfield--solid--rest($variant) {
    --txt--bg-c:    $body--background-color;
    --txt--bd-c:    transparent
                    transparent
                    var(--color--#{$variant});
    --txt--sh:      $txt--box-shadow;
    --txt--c:       colors-shade-contrast-dark-light(get-color($variant), $main--background-color);
  }

  @mixin textfield--solid--hover($variant) {
    --txt--bd-c:    get-color($variant, darker);
    --txt--sh:      $txt--box-shadow;
  }

  @mixin textfield--solid--focus($variant) {
    --txt--bd-c:    get-color($variant, darker);
    --txt--sh:      $txt--box-shadow--none;
  }

  @mixin textfield--solid--disabled($variant) {
    --txt--bg-c:    get-color($variant, lightest);
    --txt--bd-c:    get-color($variant, lightest);
    --txt--sh:      $txt--box-shadow--none;
    --txt--c:       get-color($variant, darkest);
  }

  @mixin textfield--solid--readonly($variant) {
    --txt--bg-c:    get-color($variant, lightest);
    --txt--bd-c:    var(--color--#{$variant});
    --txt--c:       colors-shade-contrast-dark-light(get-color($variant), $main--background-color);
  }


  //  Control textfield appearance - - - - - - - - - - - - - - - - - - - - - - -

	@mixin control__textfield-appearance($look, $variant) {
    @if ($look == ghost) {
      @include textfield--ghost--rest($variant);

      &:hover {
        @include textfield--ghost--hover($variant);
      }

      > input:focus {
        @include textfield--ghost--focus($variant);
      }

      &.disabled,
      > input:disabled {
        @include textfield--ghost--disabled($variant);
      }

      > input[readonly] {
        @include textfield--ghost--readonly($variant);

        &:hover {
          @include textfield--ghost--hover($variant);
        }
      }
    }// @if ($look == ghost)

    @if ($look == solid) {
      @include textfield--solid--rest($variant);

      &:hover {
        @include textfield--solid--hover($variant);
      }

      > input:focus {
        @include textfield--solid--focus($variant);
      }

      &.disabled,
      > input:disabled {
        @include textfield--solid--disabled($variant);
      }

      > input[readonly] {
        @include textfield--solid--readonly($variant);

        &:hover {
          @include textfield--solid--hover($variant);
        }
      }
    }// @if ($look == solid)
	}


  //  Control textarea appearance  - - - - - - - - - - - - - - - - - - - - - - -

	@mixin control__textarea-appearance($look, $variant) {
    @if ($look == ghost) {
      @include textfield--ghost--rest($variant);

      &:hover {
        @include textfield--ghost--hover($variant);
      }

      > textarea:focus {
        @include textfield--ghost--focus($variant);
      }

      &.disabled,
      > textarea:disabled {
        @include textfield--ghost--disabled($variant);
      }

      > textarea[readonly] {
        @include textfield--ghost--readonly($variant);

        &:hover {
          @include textfield--ghost--hover($variant);
        }
      }
    }// @if ($look == ghost)

    @if ($look == solid) {
      @include textfield--solid--rest($variant);

      &:hover {
        @include textfield--solid--hover($variant);
      }

      > textarea:focus {
        @include textfield--solid--focus($variant);
      }

      &.disabled,
      > textarea:disabled {
        @include textfield--solid--disabled($variant);
      }

      > textarea[readonly] {
        @include textfield--solid--readonly($variant);

        &:hover {
          @include textfield--solid--hover($variant);
        }
      }
    }// @if ($look == solid)
	}
